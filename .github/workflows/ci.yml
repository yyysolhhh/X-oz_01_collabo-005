name: CI

on:
  push:
    branches: [ cicd ]
  pull_request:
    branches: [ develop ]

jobs:
  ci:
    runs-on: ubuntu-22.04
    env:
      DJANGO_SECRET_KEY: secret
      ALLOWED_HOSTS: 127.0.0.1
      DB_ENGINE: "django.db.backends.mysql"
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: password
      DB_NAME: db
      AWS_ACCESS_KEY_ID: "a"
      AWS_SECRET_ACCESS_KEY: "a"
      AWS_STORAGE_BUCKET_NAME: "a"
      AWS_REGION_NAME: "a"
      AWS_DEFAULT_ACL: "a"
    steps:
      - name: Checkout the codes
        uses: actions/checkout@v3

      - name: Setup python environment
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Set timezone to KST
        run: |
          sudo rm /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime

      - name: Start Mysql
        run: |
          sudo service mysql start
          mysql -e "use mysql; FLUSH PRIVILEGES; ALTER USER '${{ env.DB_USER }}'@'localhost' IDENTIFIED BY '${{ env.DB_PASSWORD }}';" -uroot -proot
          mysql -e 'CREATE DATABASE ${{ env.DB_NAME }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      - name: Install Poetry
        run: |
          curl -sSL curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          cd backend && poetry install

      - name: Run migrations
        run: |
          cd backend
          poetry run python manage.py makemigrations
          poetry run python manage.py migrate

      - name: Run black
        run: |
          cd backend && poetry run black . --check

      - name: Run isort
        run: |
          cd backend && poetry run isort . --check --diff

      - name: Run Mypy
        run: |
          cd backend && poetry run mypy .

      - name: Test
        run: |
          cd backend && poetry run python manage.py test

